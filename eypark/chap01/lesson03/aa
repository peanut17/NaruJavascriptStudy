본문으로 바로가기
네이버 메일메일 읽기
수정전달읽음삭제이동
뒤로 가기
메일 제목etc
2024년 6월 12일 (수) 오전 9:09
글자 크기 조정중요 메일
출발 언어영어도착 언어한국어번역하기
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.web.client.RestTemplate;

@Configuration
public class AppConfig {

    @Bean
    public RestTemplate restTemplate() {
        return new RestTemplate();
    }
}


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

@Service
public class DataTransferService {

    @Autowired
    private RestTemplate restTemplate;

    public String sendData(Object data, String url) {
        HttpHeaders headers = new HttpHeaders();
        headers.setContentType(MediaType.APPLICATION_JSON);
        HttpEntity<Object> request = new HttpEntity<>(data, headers);

        return restTemplate.postForObject(url, request, String.class);
    }
}


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class DataController {

    @Autowired
    private DataTransferService dataTransferService;

    @PostMapping("/send-data")
    public String sendData(@RequestBody Object data) {
        String targetUrl = "http://target-server/endpoint";
        return dataTransferService.sendData(data, targetUrl);
    }
}


import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class ReceiveController {

    @PostMapping("/endpoint")
    public String receiveData(@RequestBody Object data) {
        // 데이터 처리 로직
        System.out.println("Received data: " + data);
        return "Data received successfully";
    }
}










import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.util.UriComponentsBuilder;

@Service
public class DataTransferService {

    @Autowired
    private RestTemplate restTemplate;

    public String sendData(Object data, String url, String param1, String param2) {
        // URL 파라미터 추가
        UriComponentsBuilder uriBuilder = UriComponentsBuilder.fromHttpUrl(url)
                                                              .queryParam("param1", param1)
                                                              .queryParam("param2", param2);

        HttpHeaders headers = new HttpHeaders();
        headers.setContentType(MediaType.APPLICATION_JSON);
        HttpEntity<Object> request = new HttpEntity<>(data, headers);

        return restTemplate.postForObject(uriBuilder.toUriString(), request, String.class);
    }
}


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class DataController {

    @Autowired
    private DataTransferService dataTransferService;

    @PostMapping("/send-data")
    public String sendData(@RequestBody Object data,
                           @RequestParam String param1,
                           @RequestParam String param2) {
        String targetUrl = "http://target-server/endpoint";
        return dataTransferService.sendData(data, targetUrl, param1, param2);
    }
}



import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class ReceiveController {

    @PostMapping("/endpoint")
    public String receiveData(@RequestBody Object data,
                              @RequestParam String param1,
                              @RequestParam String param2) {
        // URL 파라미터 및 데이터 처리 로직
        System.out.println("Received data: " + data);
        System.out.println("Received param1: " + param1);
        System.out.println("Received param2: " + param2);
        return "Data received successfully";
    }
}




import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;

public class HttpConnectionClient {

    public String sendData(String targetUrl, String jsonInputString, String param1, String param2) throws Exception {
        // URL에 파라미터 추가
        String urlWithParams = targetUrl + "?param1=" + param1 + "&param2=" + param2;
        URL url = new URL(urlWithParams);
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        
        // 요청 메서드 설정
        connection.setRequestMethod("POST");
        connection.setRequestProperty("Content-Type", "application/json; utf-8");
        connection.setRequestProperty("Accept", "application/json");
        connection.setDoOutput(true);

        // JSON 데이터를 요청 본문에 작성
        try(OutputStream os = connection.getOutputStream()) {
            byte[] input = jsonInputString.getBytes("utf-8");
            os.write(input, 0, input.length);           
        }

        // 응답 코드 확인
        int code = connection.getResponseCode();
        System.out.println("HTTP Response Code: " + code);
        
        // 응답 읽기
        try (BufferedReader br = new BufferedReader(
            new InputStreamReader(connection.getInputStream(), "utf-8"))) {
            StringBuilder response = new StringBuilder();
            String responseLine;
            while ((responseLine = br.readLine()) != null) {
                response.append(responseLine.trim());
            }
            return response.toString();
        }
    }

    public static void main(String[] args) {
        HttpConnectionClient client = new HttpConnectionClient();
        String targetUrl = "http://target-server/endpoint";
        String jsonInputString = "{\"key\":\"value\"}"; // 전송할 JSON 데이터
        String param1 = "value1";
        String param2 = "value2";

        try {
            String response = client.sendData(targetUrl, jsonInputString, param1, param2);
            System.out.println("Response: " + response);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}




import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class ReceiveController {

    @PostMapping("/endpoint")
    public String receiveData(@RequestBody String data,
                              @RequestParam String param1,
                              @RequestParam String param2) {
        // URL 파라미터 및 데이터 처리 로직
        System.out.println("Received data: " + data);
        System.out.println("Received param1: " + param1);
        System.out.println("Received param2: " + param2);
        return "Data received successfully";
    }
}
맨위로
프로필
닉네임
장용준
네이버 IDyongjun17@naver.com
환경설정
닫기
999이상개의안읽음메일 목록선택됨	중요표시된 메일 목록	첨부파일이 포함된 메일 목록	TO받은 사람이 나인 메일 목록
스마트메일함하위 메일함 펼침
로그아웃
고객센터
스마트봇
메일용량
사용중414MB전체5GB
공지사항
© NAVER Corp.
