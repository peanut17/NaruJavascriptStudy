Apache Ignite는 분산 데이터베이스 및 인메모리 데이터 그리드 솔루션으로, 클러스터링을 통해 여러 노드 간 데이터와 처리를 분산할 수 있습니다. 두 대의 우분투 서버에 Apache Ignite를 설치하고 클러스터링을 설정하는 방법을 단계별로 안내하겠습니다.


---

1. 사전 준비

두 대의 서버가 같은 네트워크에 있어야 하며 서로 통신할 수 있어야 합니다.

Java Development Kit (JDK) 8 이상이 설치되어 있어야 합니다.

두 서버의 방화벽에서 Ignite가 사용하는 포트(기본적으로 47500~47509, 47100 등)가 열려 있어야 합니다.



---

2. Apache Ignite 설치

1. Java 설치 (두 서버 모두):

sudo apt update
sudo apt install openjdk-11-jdk -y
java -version  # 설치 확인


2. Ignite 다운로드 및 설정 (두 서버 모두):

wget https://archive.apache.org/dist/ignite/2.14.0/apache-ignite-2.14.0-bin.zip
sudo apt install unzip -y
unzip apache-ignite-2.14.0-bin.zip
mv apache-ignite-2.14.0-bin /opt/ignite


3. 환경 변수 설정 (두 서버 모두):

echo 'export IGNITE_HOME=/opt/ignite' >> ~/.bashrc
echo 'export PATH=$IGNITE_HOME/bin:$PATH' >> ~/.bashrc
source ~/.bashrc




---

3. 클러스터 설정

Ignite는 기본적으로 TcpDiscoveryMulticastIpFinder를 사용해 클러스터 노드를 찾습니다. 두 서버가 서로를 인식하도록 설정 파일을 수정해야 합니다.

1. 설정 파일 수정 (두 서버 모두):

파일 경로: /opt/ignite/config/default-config.xml

<bean> 태그에서 TcpDiscoverySpi를 찾아 수정합니다:

<property name="ipFinder">
    <bean class="org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder">
        <property name="addresses">
            <list>
                <value>192.168.0.101:47500..47509</value>
                <value>192.168.0.102:47500..47509</value>
            </list>
        </property>
    </bean>
</property>

여기서 192.168.0.101과 192.168.0.102는 두 서버의 IP 주소로 대체합니다.



2. 필요한 포트 열기 (두 서버 모두):

sudo ufw allow 47500:47509/tcp
sudo ufw allow 47100/tcp
sudo ufw reload




---

4. Ignite 시작

1. 두 서버에서 Ignite 노드 실행:

cd /opt/ignite
./bin/ignite.sh config/default-config.xml


2. 로그에서 클러스터 연결 확인: 두 서버 모두의 로그에서 "Topology snapshot" 메시지를 확인합니다. 두 개의 노드가 나와야 합니다:

Topology snapshot [ver=2, servers=2, clients=0]




---

5. Ignite Web 콘솔 (선택 사항)

Ignite Web 콘솔을 사용해 클러스터 상태를 시각적으로 관리할 수 있습니다.

1. 웹 콘솔 설치:

./bin/ignite-web-agent.sh


2. 웹 콘솔 접속: Ignite 공식 웹 콘솔 사이트에서 연결을 설정합니다.




---

이제 두 대의 서버가 Ignite 클러스터로 설정되어 데이터를 분산 처리할 준비가 되었습니다. 추가적인 애플리케이션 개발이나 캐시 설정은 Apache Ignite 문서를 참고하세요.




Apache Ignite Web Console은 Ignite 클러스터의 모니터링, 관리, 및 설정을 위한 웹 기반 도구입니다. Web Console을 사용하는 방법을 단계별로 설명하겠습니다.


---

1. 사전 준비

Ignite 클러스터가 실행 중이어야 합니다.

Java 8 이상이 설치되어 있어야 합니다.

클러스터와 Web Console 에이전트가 통신할 수 있어야 합니다.



---

2. Web Console 구성 요소

Ignite Web Console은 다음 두 가지 주요 구성 요소로 동작합니다:

1. Web Console 서버: Ignite 팀이 제공하는 클라우드 기반 서버 (https://console.gridgain.com).


2. Web Console 에이전트: 클러스터와 Web Console 서버 간 통신을 담당.




---

3. Web Console 사용 방법

1) Web Console 서버 접속

1. Ignite Web Console로 이동합니다.


2. 계정을 생성하고 로그인합니다.




---

2) Web Console 에이전트 설치 및 실행

Web Console 에이전트를 Ignite 클러스터가 실행 중인 서버에서 실행해야 합니다.

1. 에이전트 다운로드:

Ignite 설치 디렉토리에서 Web Console 에이전트 스크립트를 확인:

cd /opt/ignite
./bin/ignite-web-agent.sh



2. 에이전트 실행: 에이전트를 실행하면 Web Console 서버와 통신을 시작합니다:

./bin/ignite-web-agent.sh


3. 에이전트 실행 로그 확인: 에이전트가 실행되면 다음과 같은 로그 메시지가 출력됩니다:

Web Console Agent started successfully!


4. 에이전트 실행 시 외부 접속 가능하도록 방화벽 설정: Web Console 서버가 에이전트에 접속할 수 있도록 필요한 포트를 열어줍니다 (예: 8080 포트):

sudo ufw allow 8080/tcp




---

3) 클러스터 연결

1. Web Console에서 클러스터 연결:

Web Console 사이트에서 Connect to Cluster 버튼 클릭.

에이전트가 실행 중인 서버의 IP를 입력하여 연결을 시도합니다.

에이전트와 클러스터가 성공적으로 연결되었는지 확인합니다.



2. 클러스터 상태 확인: 연결이 성공하면 클러스터의 상태, 노드, 캐시, 및 작업 로그 등을 확인할 수 있습니다.




---

4) 구성 및 모니터링

캐시 구성: Web Console을 사용하여 캐시를 생성하거나 수정할 수 있습니다.

SQL 실행: Web Console의 SQL 탭에서 SQL 쿼리를 실행하여 데이터를 조회하거나 삽입할 수 있습니다.

모니터링: 클러스터의 상태, 노드 메트릭, CPU 사용량 등을 실시간으로 확인할 수 있습니다.



---

5) 에이전트 자동 실행 (선택 사항)

에이전트를 서버 재부팅 시 자동으로 실행하려면 systemd 서비스를 설정합니다.

1. systemd 서비스 파일 생성:

sudo nano /etc/systemd/system/ignite-web-agent.service


2. 다음 내용 추가:

[Unit]
Description=Apache Ignite Web Agent
After=network.target

[Service]
User=your-username
ExecStart=/opt/ignite/bin/ignite-web-agent.sh
Restart=always

[Install]
WantedBy=multi-user.target


3. 서비스 활성화 및 시작:

sudo systemctl enable ignite-web-agent
sudo systemctl start ignite-web-agent




---

이제 Apache Ignite Web Console을 사용하여 클러스터를 모니터링 및 관리할 수 있습니다. 추가적인 설정은 필요에 따라 Apache Ignite 공식 문서를 참고하세요.

